#ifndef STATE_H
#define STATE_H

////////////////////////////////////////////////////////////
/// \brief state class for game 
///
/// Virtual class for all the states in game ,
/// which are to be derived from this class
///
///
////////////////////////////////////////////////////////////
class state
{
public:
	////////////////////////////////////////////////////////////
	/// \brief constructor
	///
	////////////////////////////////////////////////////////////
	state() {};

	////////////////////////////////////////////////////////////
	/// \brief virtual destructor
	///
	////////////////////////////////////////////////////////////
	virtual ~state() {};

	////////////////////////////////////////////////////////////
	/// \brief pure virtual initialization function
	///
	/// initiailizes objects inside state class
	///
	////////////////////////////////////////////////////////////
	virtual void init() = 0;

	////////////////////////////////////////////////////////////
	/// \brief pure virtual pollevents function
	///
	/// responsible for polling events inside state class
	///
	////////////////////////////////////////////////////////////
	virtual void pollevents() = 0;

	////////////////////////////////////////////////////////////
	/// \brief pure virtual update function
	///
	/// responsible for updating and mantaining time
	/// independent movement
	///
	/// \param deltatime takes a float by reference to deltatime value
	/// 
	////////////////////////////////////////////////////////////
	virtual void update(float& deltatime) = 0;

	////////////////////////////////////////////////////////////
	/// \brief pure virtual render function
	///
	/// responsible for rendering all objects present in 
	/// state class
	////////////////////////////////////////////////////////////
	virtual void render() = 0;

	////////////////////////////////////////////////////////////
	/// \brief virtual function to pause state
	///
	////////////////////////////////////////////////////////////
	virtual void pause() {};

	////////////////////////////////////////////////////////////
	/// \brief virtual function to start state
	///
	////////////////////////////////////////////////////////////
	virtual void start() {};
};

#endif